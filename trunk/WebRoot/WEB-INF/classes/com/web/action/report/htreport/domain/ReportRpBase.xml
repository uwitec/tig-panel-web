<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="ReportRpBase">

	<typeAlias alias="ReportRpBase" type="com.web.action.report.htreport.domain.ReportRpBase"/>
	
    <resultMap id="reportRpBaseModel" class="ReportRpBase">
    	<result property="reportId"        column="report_id"    /> 
    	<result property="reportName"        column="report_name"    /> 
    	<result property="needFormat"        column="need_format"    /> 
    	<result property="needHeader"        column="need_header"    />
    	<result property="shortEng"        column="short_eng"    /> 
    	<result property="needBatchNo"        column="need_batch_no"    /> 
    	<result property="header"        column="header"    /> 
    	<result property="hasSeq"        column="has_seq"    /> 
    	<result property="sql"        column="sql"    /> 
    	<result property="status"        column="status"    /> 
    	<result property="isExtend"        column="is_extend"    /> 
    	<result property="extendClass"        column="extend_class"    /> 
    	<result property="createUid"        column="create_uid"    /> 
    	<result property="createTime"        column="create_time"    jdbcType="Timestamp" javaType="java.sql.Timestamp"  /> 
    	<result property="lastModifyUid"        column="last_modify_uid"    /> 
    	<result property="lastModifyTime"        column="last_modify_time"    jdbcType="Timestamp" javaType="java.sql.Timestamp"  /> 
    	<result property="notes"        column="notes"    /> 
    	<result property="resvFld1"        column="resv_fld1"    /> 
    	<result property="resvFld2"        column="resv_fld2"    /> 
    	<result property="queryDomainCount"        column="query_domain_count"    /> 
	</resultMap>
	

    <select id="findById" resultMap="reportRpBaseModel" parameterClass="string"  resultSetType="SCROLL_INSENSITIVE" >
       	   select *  from t_report_rp_base where report_id = #value#
    </select>
    
    
    <select id="findByCondition" resultMap="reportRpBaseModel" parameterClass="java.util.Map"  resultSetType="SCROLL_INSENSITIVE" >
        select *  from t_report_rp_base  
        <dynamic prepend="where">
        	<isNotEmpty prepend="and" property="reportId">
        		report_id=#reportId#
        	</isNotEmpty>
        </dynamic>
    </select>
    
    <select id="findPagingByCondition" resultMap="reportRpBaseModel" parameterClass="java.util.Map" resultSetType="SCROLL_INSENSITIVE">
		select * from (select a.*,rownum rn from (select * from t_report_rp_base   where 1=1
		<isNotEmpty prepend="and" property="query">
		(	
        		upper(report_name) like upper('%$query$%')  
        		 or upper(sql) like upper('%$query$%')  
        		 or upper(notes) like upper('%$query$%')  
		)
		</isNotEmpty>
      		<isNotEmpty prepend="and" property="status">
			status=#status#
		</isNotEmpty>
		<isNotEmpty property="orderBy">order by  $orderBy$</isNotEmpty>  
		<![CDATA[	
			) a where rownum<= #endIndex#) b where b.rn >= #startIndex#
		]]>

	</select>
    
    <select id="findPagingCountByCondition"  resultClass="int" parameterClass="java.util.Map" resultSetType="SCROLL_INSENSITIVE">
		select count(*)  from t_report_rp_base    where  1=1
		<isNotEmpty prepend="and" property="query">
		(	
        		upper(report_name) like upper('%$query$%')  
        		 or upper(sql) like upper('%$query$%')  
        		 or upper(notes) like upper('%$query$%')  
		)
		</isNotEmpty>
      		<isNotEmpty prepend="and" property="status">
			status=#status#
		</isNotEmpty>
	</select>

    <insert id="insert" parameterClass="ReportRpBase"  >
        <selectKey resultClass="String" keyProperty="reportId" type="pre">
			select  decode((max(report_id)+1),null,1,(max(report_id)+1) ) as report_id  from t_report_rp_base
  		</selectKey>
        insert into t_report_rp_base(report_id,report_name,need_format,short_eng,need_batch_no,need_header,header,has_seq,sql,status,is_extend,extend_class,create_uid,create_time,last_modify_uid,last_modify_time,notes,resv_fld1,resv_fld2,query_domain_count) 
        	values 
        (#reportId#,#reportName#,#needFormat#,#shortEng#,#needBatchNo#,#needHeader#,#header#,#hasSeq#,#sql#,#status#,#isExtend#,#extendClass#,#createUid#,#createTime#,#lastModifyUid#,#lastModifyTime#,#notes#,#resvFld1#,#resvFld2#,#queryDomainCount#)
    </insert>

    
    <update id="update" parameterClass="ReportRpBase"   >
        update t_report_rp_base set
        		report_name = #reportName#
        		,need_format = #needFormat#
        		,need_header = #needHeader#
        		,short_eng=#shortEng#
        		,need_batch_no=#needBatchNo#
        		,header = #header#
        		,has_seq = #hasSeq#
        		,sql = #sql#
        		,status = #status#
        		,is_extend = #isExtend#
        		,extend_class = #extendClass#
        		,last_modify_uid = #lastModifyUid#
        		,last_modify_time = #lastModifyTime#
        		,notes = #notes#
        		,query_domain_count = #queryDomainCount#
        where report_id = #reportId#
    </update>
    

    <delete id="deleteByObjId" parameterClass="string" >
        delete from t_report_rp_base where report_id = #value#
    </delete>

	<select id="getReportId" resultClass="String">
		select  decode((max(report_id)+1),null,1,(max(report_id)+1) ) from t_report_rp_base
	</select>
	
</sqlMap>
